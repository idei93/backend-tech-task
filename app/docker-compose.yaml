services:
  api:
    build: .
    container_name: events-api
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data:ro
    environment:
      MONGODB_URL: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_HOST}:${MONGODB_PORT}/
      MONGODB_HOST: ${MONGODB_HOST}
      MONGODB_DB: events_analytics
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      RABBITMQ_URL: ${RABBITMQ_URL}
      RATE_LIMIT_REQUESTS: ${RATE_LIMIT_REQUESTS}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW}
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - events-network

  worker:
    build: .
    command: python -m worker
    environment:
      MONGODB_URL: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_HOST}:${MONGODB_PORT}
      MONGODB_DB: events_analytics
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - events-network
    deploy:
      replicas: 2